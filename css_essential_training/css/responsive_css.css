/* Three key ingredients in a responsive web design: 
   1) Fluid layout.
   2) Flexible images
   3) Media queries.
*/

/* Flexible background images
   Images that are part of the content should be added with HTML
   Images that are presentational should be added with CSS
*/

.background {
	max-width: 600px;
	padding: 100px;
	background-color: lightblue;
	background-image: url(https://static.scientificamerican.com/sciam/cache/file/4E0744CD-793A-4EF8-B550B54F7F2C4406_source.jpg);
	background-repeat: no-repeat;
	/*background-position: 100px 10%;*/
	background-size: 100% 100%; /*Set the width and height of the background, first value for the width and second for the height*/
}

/* Introduction to media queries
   ¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨
   Though the foundation of responsive web design is based on creating a fluid layout what makes a design go from fluid to responsive
   is the usage of media queries.
   Media queries make it possible to modify the CSS depending on specific conditions defined with a media type and media feature.
   A media query is created to CSS via @media_rule.

   Media Types
   ¨¨¨¨¨¨¨¨¨¨¨
   all -> matches to all devices
   print -> matches to printers and print-related displays
   speech -> matches to screen reading devices that "read out" page
   screen -> matches to all devices that aren't categorized as print or speech

   Media features
   ¨¨¨¨¨¨¨¨¨¨¨¨¨¨
   Used to test a specific feature of the device, such as viewport width or orientation.
   Use the keyword "and" to combine media features with media types.

   Where to add media queries ?
   ¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨¨
   You can add in a separate file and then import via @import to the main CSS
   You can add at the bottom of the main CSS file.
   Finally, you can also add via HTML with the <link> element
*/